const gcdCalculate=(e,l)=>l?gcdCalculate(l,e%l):e;function decimalToFraction(e){let l=e.toString().length-e.toString().search(/\./),t=Math.pow(10,l),i=Number(e)*t,o=gcdCalculate(i,t);return`${Math.floor(i/o)}/${Math.floor(t/o)}`}const isRepeatingDecimal=e=>{let l=e,t={bool:!1};for(let i=1;i<e.length-1;i++){let o=[];o.push(l[0]);let r=0,a=0;for(let e=1;e<l.length-1;e++)l[e]===o[r]&&(r++,o.push(l[r]),0===a&&(a=e));if(o.length>3){let e=o.reduce(((e,l)=>e+`${l}`));if(e.length===l.length||e.length+a===l.length)return t.bool=!0,t.dizim=i-1,t.periodo=a,t}l=e.slice(i)}return t},handleRepeatingDecimal=(e,l)=>{let t=Number(`${e[0]}${e[1].slice(0,l.dizim)}${e[1].slice(l.dizim,l.dizim+l.periodo)}`);t-=Number(`${e[0]}${e[1].slice(0,l.dizim)}`);let i="";for(let e=0;e<l.periodo;e++)i+="9";for(let e=0;e<l.dizim;e++)i+="0";let o=gcdCalculate(t,Number(i));return o!==Number(i)&&(t/=o,i=""+Number(i)/o),`${t}/${i}`},decimalToFrac=e=>{let l=e.split("."),t="",i=!1;if(/[-+]/.test(l[0][0])?(l[0]=l[0].slice(1),i=!0):(i=!0,e=`+${e}`),l[1].length>=3){let e=isRepeatingDecimal(l[1]);t=e.bool?handleRepeatingDecimal(l,e):decimalToFraction(`${l[0]}${l[1]}`)}else t=decimalToFraction(`${l[0]}.${l[1]}`);return i&&(t=`${e[0]}${t}`),t};module.exports=decimalToFrac;